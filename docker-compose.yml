services:
  database:
    container_name: database
    expose:
      - ${POSTGRES_PASSWORD}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    image: postgres:16.2-alpine3.19
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - database:/var/lib/postgresql/data
    command: -p ${POSTGRES_PORT}
    restart: always

  bot:
    container_name: bot
    build: ./bot
    depends_on:
      database:
        condition: service_healthy
    #    volumes:
    #      - ./vpn-letsencrypt:/etc/letsencrypt
    restart: always

  redis:
    container_name: redis
    image: 'redis:latest'
    command: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    volumes:
      - redis-data:/data
    restart: always

#  nginx-proxy-manager:
#    container_name: nginx-proxy-manager
#    image: 'jc21/nginx-proxy-manager:latest'
#    restart: unless-stopped
#    ports:
#      - '80:80'
#      - '81:81'
#      - '443:443'
#    volumes:
#      - ./data:/data
#      - ./letsencrypt:/etc/letsencrypt


volumes:
  database:
  #  letsencrypt:
  redis-data: