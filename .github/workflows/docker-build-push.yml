name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.env'
      - 'docker-compose.yml'
      - 'docker-compose-dev.yml'
      - 'README.md'
      - '.gitignore'

jobs:
  lint:
    name: Run GolangCI-Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install dependencies
        working-directory: ./bot
        run: |
          go mod tidy
          go mod verify
          go mod download

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.63.4

      - name: Run golangci-lint
        working-directory: ./bot
        run: |
          golangci-lint run --out-format colored-line-number

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set repository name to lowercase
        id: repo-name
        run: |
          echo "name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./bot
          push: true
          tags: ghcr.io/${{ steps.repo-name.outputs.name }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
