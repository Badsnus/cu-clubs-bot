services:
  database:
    container_name: database
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    image: postgres:16.2-alpine3.19
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - database:/var/lib/postgresql/data
    command: -p ${POSTGRES_PORT}
    restart: always

  bot:
    container_name: bot
    build:
      context: ./bot
      args:
        PR_NAME: ${PR_NAME:-Development}
        PR_URL: ${PR_URL}
        BUILD_DATE: ${BUILD_DATE:-Unknown}
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./logs:/opt/logs
      - ./config:/opt/config
    restart: always

  redis:
    container_name: redis
    image: 'redis:latest'
    command: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis-data:/data
    restart: always

volumes:
  database:
  backups_database:
  redis-data: